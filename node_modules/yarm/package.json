{
  "name": "yarm",
  "version": "0.3.7",
  "description": "Yet Another REST Middleware for express and mongoose",
  "homepage": "http://yarm.njoyard.fr",
  "repository": {
    "type": "git",
    "url": "git://github.com/njoyard/yarm.git"
  },
  "keywords": [
    "rest",
    "restful",
    "express",
    "mongoose"
  ],
  "author": {
    "name": "Nicolas Joyard",
    "email": "joyard.nicolas@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/njoyard/yarm/issues"
  },
  "main": "index.js",
  "devDependencies": {
    "mocha": "*",
    "express": "~3.5.1",
    "mongoose": "*",
    "mongodb": "*"
  },
  "scripts": {
    "test": "mocha"
  },
  "readme": "yarm\n====\n\n*Yet Another REST Middleware for node.js, Express and mongoose.*\n\nMaster branch: [![Build Status](https://travis-ci.org/njoyard/yarm.png?branch=master)](https://travis-ci.org/njoyard/yarm)\n\nDevelopment branch: [![Build Status](https://travis-ci.org/njoyard/yarm.png?branch=devel)](https://travis-ci.org/njoyard/yarm)\n\n\n\n## Installation\n\nUse npm to install yarm, or add yarm to your package.json dependencies.\n\n```\n$ npm install yarm\n```\n\nyarm has no dependencies, however it is intended to be used with Express and will have additional features if mongoose is present.\n\n\n\n## Usage\n\nBelow is a short introduction to yarm usage, see the [complete documentation][doc] for more information.\n\n### Basics\n\nUse yarm as any other Express middleware.\n\n```javascript\nvar app = require(\"express\")();\nvar yarm = require(\"yarm\");\n\napp.use(\"/rest\", yarm());\napp.listen(80);\n```\n\n\n### Serving native javascript resources\n\nUse `yarm.native()` to serve native Javascript objects or arrays.\n\n```javascript\nvar app = require(\"express\")();\nvar yarm = require(\"yarm\");\n\napp.use(\"/rest\", yarm());\n\nyarm.native(\"me\", {\n  name: \"Alice\",\n  age: 30\n});\n\nyarm.native(\"friends\", [\n  \"Bob\",\n  \"Charlie\"\n]);\n\napp.listen(80);\n```\n\n```\n$ curl http://localhost/rest/me\n{\n  \"name\": \"Alice\",\n  \"age\": 30\n}\n\n$ curl http://localhost/rest/me/name\nAlice\n\n$ curl http://localhost/rest/friends\n{\n  \"_count\": 2,\n  \"_items\": [ \"Bob\", \"Charlie\" ]\n}\n\n$ curl http://localhost/rest/friends/1\nCharlie\n```\n\nHead on to the documentation on [Native resources][doc-native] for more details.\n\n\n### Serving mongoose models and aggregates\n\nWhen mongoose is available, you can use `yarm.mongoose()` to serve models.\n\n```javascript\nvar app = require(\"express\")();\nvar yarm = require(\"yarm\");\nvar mongoose = require(\"mongoose\");\n\napp.use(\"/rest\", yarm());\n\nvar postSchema = new mongoose.Schema({\n  title: String,\n  text: String,\n  comments: [{\n    author: String,\n    text: String\n  }]\n});\n\nvar Post = mongoose.model(\"post\", postSchema);\n\nyarm.mongoose(\"posts\", Post);\n\napp.listen(80);\n```\n\n```\n$ curl http://localhost/rest/posts?skip=10&limit=1\n{\n  \"_count\": 42,\n  \"_items\": [\n    {\n      \"_id\": \"507f191e810c19729de860ea\",\n      \"title\": \"My 11th post\",\n      \"text\": \"Hello, World\",\n      \"comments\": [\n        {\n          \"author\": \"Bob\",\n          \"text\": \"First !\"\n        }\n      ]\n    }\n  ]\n}\n\n$ curl http://localhost/rest/posts/507f191e810c19729de860ea\n{\n  \"_id\": \"507f191e810c19729de860ea\",\n  \"title\": \"My 11th post\",\n  \"text\": \"Hello, World\",\n  \"comments\": [\n    {\n      \"author\": \"Bob\",\n      \"text\": \"First !\"\n    }\n  ]\n}\n\n$ curl http://localhost/rest/posts/507f191e810c19729de860ea/comments/0/text\nFirst !\n```\n\nHead on to the documentation on [Mongoose resources][doc-mongoose] for more details.\n\n\n### Serving custom resources\n\nUse `yarm.resource` to define resources with custom handlers.\n\n```javascript\nvar app = require(\"express\")(),\nvar yarm = require(\"yarm\");\n\nyarm.resource(\"greeting\")\n  .get(function(req, cb) {\n    cb(null, { hello: \"world\" });\n  })\n  .sub(\"french\")\n    .get(function(req, cb) {\n      cb(null, { bonjour: \"tout le monde\" });\n    });\n\nyarm.resource(\"greeting/pirate\")\n  .get(function(req, cb) {\n    cb(null, { arrrrr: \"arrrrrr\" });\n  });\n\napp.use(\"/rest\", yarm());\napp.listen(80);\n```\n\n```\n$ curl http://localhost/rest/greeting\n{\n  \"hello\": \"world\"\n}\n\n$ curl http://localhost/rest/greeting/french\n{\n  \"bonjour\": \"tout le monde\"\n}\n\n$ curl http://localhost/rest/greeting/pirate\n{\n  \"arrrrr\": \"arrrrrr\"\n}\n```\n\nHead on to the documentation on [Custom resources][doc-custom] for more details.\n\n\n### Extending served resources\n\nyarm allows adding and replacing handlers for any resource or sub-resource. This enables restricting or extending the behaviour of the default native and mongoose resource handlers, as well as defining very complex custom resource hierarchies.\n\n```javascript\n\nyarm.<whatever>()\n  .get(function(req, cb) {\n    // Override GET handler here\n  });\n\nfunction notAllowed(req, cb) {\n  cb(null, \"Nope, sorry :(\");\n}\n\nyarm.native(\"readonly\", myObject)\n  .put(notAllowed)\n  .post(notAllowed)\n  .del(notAllowed)\n    .sub(\"*\")\n    .put(notAllowed)\n    .post(notAllowed)\n    .del(notAllowed);\n\nyarm.resource(\"already/defined/path\")\n  .get(function(req, cb) {\n    // Will not alter 'already' nor 'already/defined' handlers,\n    // nor those for 'already/defined/other' if they are defined\n  });\n```\n\nHead on to the documentation on [Extending resources][doc-extend] for more details.\n\n\n\n## Contributing\n\nyarm is published under the terms of the MIT license.  Feel free to report bugs or send pull requests.\n\n\n[doc]: http://yarm.njoyard.fr\n[doc-native]: http://yarm.njoyard.fr/doc-native-resources.html\n[doc-mongoose]: http://yarm.njoyard.fr/doc-mongoose-resources.html\n[doc-custom]: http://yarm.njoyard.fr/doc-custom-resources.html\n[doc-extend]: http://yarm.njoyard.fr/doc-extending-resources.html\n",
  "readmeFilename": "README.md",
  "_id": "yarm@0.3.7",
  "dist": {
    "shasum": "8976d2229ed9c958fa836be6c1a70df2c6456c08"
  },
  "_from": "yarm@latest",
  "_resolved": "https://registry.npmjs.org/yarm/-/yarm-0.3.7.tgz"
}
